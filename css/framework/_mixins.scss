// Media Queries mixins
@mixin media-query($media-query){

    @if $media-query == tablet {

        @media only screen and (min-width:$tablet-vp) and (max-width:$desktop-vp - 1) { @content; }

    }

    @if $media-query == desktop {

        @media only screen and (min-width:$desktop-vp) { @content; }

    }

}

// Automatic rem fallback mixin from Karl Merkli (http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/)
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

// Mixin for gradients (http://codeboxers.com/straight-sass-gradient-mixin/)
@mixin linear-gradient($property, $fromColor, $toColor) {
  $property: $toColor; /* Fallback Color */
  $property: linear-gradient(to bottom, $fromColor, $toColor);
  //filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}
